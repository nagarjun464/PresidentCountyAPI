name: Build & Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  REGION: ${{ secrets.GCP_REGION }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
  REPO: cloud-run-source-deploy
  IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/${{ secrets.CLOUD_RUN_SERVICE }}:${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Ensure Artifact Registry repo exists
        run: |
          gcloud artifacts repositories describe "$REPO" --location="$REGION" || \
          gcloud artifacts repositories create "$REPO" --repository-format=docker --location="$REGION"

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker "$REGION-docker.pkg.dev" --quiet

      # Build your container with Cloud Build (uses your Dockerfile)
      # If you prefer Buildpacks and NO Dockerfile, see the note below.
      - name: Build & push image
        run: gcloud builds submit --tag "$IMAGE" .

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region:  ${{ env.REGION }}
          image:   ${{ env.IMAGE }}
          flags: --allow-unauthenticated --ingress=all --port=8080

      - name: Show URL
        run: echo "Service URL = ${{ steps.deploy.outputs.url }}"
